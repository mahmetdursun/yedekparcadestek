datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  // NextAuth'un beklediği alanlar:
  name          String? // <- zorunlu değil
  email         String    @unique
  emailVerified DateTime?
  image         String?

  // Senin ek alanların: hepsi opsiyonel olmalı (OAuth'ta gelmez)
  firstName String?
  lastName  String?
  password  String? // local kayıt/giriş için bcrypt hash (opsiyonel)
  phone     String?
  birthDate DateTime?

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // NextAuth ilişkileri için (zaten eklemiştik)
  accounts Account[]
  sessions Session[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
